plugins {
    id "idea"
    id "java-library"
    id "maven-publish"
}

base {
    archivesName = rootProject.archives_base_name
}

allprojects {
    apply plugin: 'java-library'

    group = rootProject.maven_group
    version = rootProject.artifact_version

    repositories {
        maven {
            url = "https://jitpack.io/"
        }
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        withSourcesJar()
        withJavadocJar()
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }

    tasks.withType(Javadoc).configureEach {
        options.encoding = "UTF-8"
    }

    tasks.withType(Test).configureEach { tsk ->
        tsk.systemProperty "file.encoding", "UTF-8"
    }

    jar {
        manifest {
            attributes "Implementation-Version": project.version
        }
    }

    compileJava.dependsOn clean
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    base {
        archivesName = rootProject.archives_base_name + "-" + project.name
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    dependencies {
        compileOnly "org.jetbrains:annotations:26.0.2"
        annotationProcessor(compileOnly("org.projectlombok:lombok:1.18.36"))

        testImplementation platform('org.junit:junit-bom:5.11.4')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testAnnotationProcessor(testCompileOnly("org.projectlombok:lombok:1.18.36"))
    }

    test {
        useJUnitPlatform()

        ignoreFailures true

        testLogging {
            exceptionFormat = "full"
            events "passed", "skipped", "failed"
        }
    }

    publishing {
        publications {
            create("MavenJava", MavenPublication) {
                from components.java
                artifactId = rootProject.archives_base_name
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "Local"
                url = rootProject.buildDir.toPath().resolve("repo").toAbsolutePath().toString()
            }
        }
    }
}
